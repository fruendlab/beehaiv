#!/usr/bin/env python
"""
Usage:
    beehaiv [options] token <USERNAME>:<PASSWORD>
    beehaiv [options] register <NAME> [<VARIABLE> ...]
    beehaiv [options] observer <USERNAME>:<PASSWORD>
    beehaiv [options] trials <ID>

Options:
    -t TOKEN, --token=TOKEN
        Explicitly give the access token. If none is given, get it from the
        environment variable BEEHAIV_TOKEN
    -u URL, --url=URL
        URL of the beehaiv server. Default: localhost:8000
"""

import os
from docopt import docopt
import requests

from beehaiv.crypto import get_basic_token

URL = 'http://127.0.0.1:8000'


def register(args):
    url = args['--url'] or URL
    token = args['--token'] or os.environ['BEEHAIV_TOKEN']
    r = requests.post(url + '/v1/experiments/',
                      headers={'Authorization': token},
                      data={
                         'name': args['<NAME>'],
                         'variable_names': ','.join(args['<VARIABLE>']),
                      })
    if r.ok:
        print(r.json())
    else:
        print(r.status_code, r.reason)


def token(args):
    url = args['--url'] or URL
    try:
        token_ = get_token(*args['<USERNAME>:<PASSWORD>'].split(':'), url)
    except ValueError as e:
        print(e.message)
    print(token_)


def trials(args):
    url = args['--url'] or URL
    id_ = args['<ID>']
    token = args['--token'] or os.environ['BEEHAIV_TOKEN']
    r = requests.get(url + '/v1/experiments/{}/trials/'.format(id_),
                     headers={'Authorization': token})
    print(r.json())


def get_token(username, password, url):
    basic_token = get_basic_token(username, password)
    r = requests.get(url + '/v1/token/',
                     headers={'AUTHORIZATION': basic_token})
    if r.ok:
        return r.json()
    else:
        raise ValueError('[{}] {}'.format(r.status_code, r.reason))


def observer(args):
    url = args['--url'] or URL
    username, password = args['<USERNAME>:<PASSWORD>'].split(':')
    r = requests.post(url + '/v1/users/',
                      data={'username': username, 'password': password})
    if r.ok:
        return r.json()
    else:
        raise ValueError('[{}] {}'.format(r.status_code, r.reason))


if __name__ == '__main__':
    args = docopt(__doc__)

    if args['token']:
        token(args)
    elif args['register']:
        register(args)
    elif args['trials']:
        trials(args)
    elif args['observer']:
        observer(args)
